apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

def config = rootProject.ext

android {
    compileSdkVersion config.android.compileSdkVersion
    buildToolsVersion config.android.buildToolsVersion
    defaultConfig {
        applicationId "com.lyl.wanandroid"
        minSdkVersion config.android.minSdkVersion
        targetSdkVersion config.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {

            sourceCompatibility JavaVersion.VERSION_1_8

            targetCompatibility JavaVersion.VERSION_1_8

        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation config.dependencies["appcompat"]
    implementation config.dependencies["constraintlayout"]
    implementation config.dependencies["okhttp"]
    implementation config.dependencies["lifecycle"]
    implementation config.dependencies["core-ktx"]
    implementation config.dependencies["material"]

    //butterknife
    implementation config.dependencies["butterknife"]
    kapt config.dependencies["butterknife-compiler"]

    //eventbus
    api 'org.greenrobot:eventbus:3.0.0'
//    api config.dependencies["eventbus"]

    //Paging
    implementation config.dependencies["paging-runtime"]
    implementation config.dependencies["paging-common"]
    implementation config.dependencies["paging-rxjava2"]

    // RxJava
    implementation config.dependencies["rxjava2"]
    implementation config.dependencies["rxandroid2"]

    // Retrofit
    implementation config.dependencies["adapter-rxjava2"]
    implementation config.dependencies["converter-gson"]
    implementation config.dependencies["retrofit"]
    implementation config.dependencies["logging-interceptor"]

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor config.dependencies["glide-compiler"]

    implementation project(path: ':AppMonitor')
}

kapt {
    generateStubs = true
}
